##DEBUG < INFO < WARN < ERROR < FATAL
#### 设置日志级别  ###
log4j.rootLogger=INFO,console,dailyFile
#### 输出到控制台 ###
log4j.appender.console=org.apache.log4j.ConsoleAppender 
log4j.appender.console.Threshold=INFO
log4j.appender.console.ImmediateFlush=true 
log4j.appender.console.Target=System.out 
log4j.appender.console.layout=org.apache.log4j.PatternLayout 
log4j.appender.console.layout.ConversionPattern=%d %t [%p] %F --> %m %x %n
## 定期回滚日志文件(dailyFile) 
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.dailyFile.Threshold=DEBUG
log4j.appender.dailyFile.ImmediateFlush=true 
log4j.appender.dailyFile.Append=true 
log4j.appender.dailyFile.File=E:/private/logs/zygl/zygl.log
log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd 
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout 
log4j.appender.dailyFile.layout.ConversionPattern=%d %t [%p] %F --> %m %x %n
##hibernate日志记录
#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug
### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug
### log just the SQL
log4j.logger.org.hibernate.SQL=debug
### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info
log4j.logger.org.hibernate.type=debug
log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=debug
### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug
### log cache activity ###
log4j.logger.org.hibernate.cache=debug
### log transaction activity
log4j.logger.org.hibernate.transaction=debug
### log JDBC resource acquisition
log4j.logger.org.hibernate.jdbc=debug
### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace  

















### 保存异常信息到单独文件 ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.D.File = logs/error.log
#log4j.appender.D.Append = true
#log4j.appender.D.Threshold = ERROR
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n 

##org.apache.log4j.ConsoleAppender（控制台） 
##org.apache.log4j.FileAppender（文件） 
##org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件） 
##org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件） 
##org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方） 
## 日志文件(logFile) 
#log4j.appender.logFile=org.apache.log4j.FileAppender 
#log4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender 
#log4j.appender.logFile.Threshold=INFO 
#log4j.appender.logFile.ImmediateFlush=true 
#log4j.appender.logFile.Append=true 
#log4j.appender.logFile.File=${spring_springmvc_jpa.root}/private/logs/zygl/zygl.log
#log4j.appender.logFile.layout=org.apache.log4j.PatternLayout 
#log4j.appender.logFile.layout.ConversionPattern=%d %t [%-5p] %F -->> %m %x %n

## 回滚文件(rollingFile) 
#log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender 
#log4j.appender.rollingFile.Threshold=DEBUG 
#log4j.appender.rollingFile.ImmediateFlush=true 
#log4j.appender.rollingFile.Append=true 
#log4j.appender.rollingFile.File=${spring_springmvc_jpa.root}/private/logs/zygl/zygl.log
#log4j.appender.rollingFile.MaxFileSize=200KB 
#log4j.appender.rollingFile.MaxBackupIndex=50 
#log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout 
#log4j.appender.rollingFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n 

## 应用于socket 
#log4j.appender.socket=org.apache.log4j.RollingFileAppender 
#log4j.appender.socket.RemoteHost=localhost 
#log4j.appender.socket.Port=5001 
#log4j.appender.socket.LocationInfo=true 
## Set up for Log Factor 5 
#log4j.appender.socket.layout=org.apache.log4j.PatternLayout 
#log4j.appender.socket.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n 
## Log Factor 5 Appender 
#log4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appender 
#log4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000 
## 发送日志到指定邮件 
#log4j.appender.mail=org.apache.log4j.net.SMTPAppender 
#log4j.appender.mail.Threshold=FATAL 
#log4j.appender.mail.BufferSize=10 
#log4j.appender.mail.From = xxx@mail.com 
#log4j.appender.mail.SMTPHost=mail.com 
#log4j.appender.mail.Subject=Log4J Message 
#log4j.appender.mail.To= xxx@mail.com 
#log4j.appender.mail.layout=org.apache.log4j.PatternLayout 
#log4j.appender.mail.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n 
## 应用于数据库 
#log4j.appender.database=org.apache.log4j.jdbc.JDBCAppender 
#log4j.appender.database.URL=jdbc:mysql://localhost:3306/test 
#log4j.appender.database.driver=com.mysql.jdbc.Driver 
#log4j.appender.database.user=root 
#log4j.appender.database.password= 
#log4j.appender.database.sql=INSERT INTO LOG4J (Message) VALUES('=[%-5p] %d(%r) --> [%t] %l: %m %x %n') 
#log4j.appender.database.layout=org.apache.log4j.PatternLayout 
#log4j.appender.database.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n 
#
## 自定义Appender 
#log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender 
#log4j.appender.im.host = mail.cybercorlin.net 
#log4j.appender.im.username = username 
#log4j.appender.im.password = password 
#log4j.appender.im.recipient = corlin@cybercorlin.net 
#log4j.appender.im.layout=org.apache.log4j.PatternLayout 
#log4j.appender.im.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n 



#log4j.rootLogger=INFO,stdout,file
#
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender 
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss,SSS} [%c]-[%p] %m%n 
#
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender 
#log4j.appender.file.File=${spring_springmvc_jpa.root}/shirodemo.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout 
#log4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} [%t] [%c] [%p] - %m%n
#
#log4j.logger.org.hibernate.tool.hbm2ddl=info

